{
  "{\"sourceRoot\":\"/Users/experlabszeeshan/Music/bulbul-main/server/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/experlabszeeshan/Music/bulbul-main/server\",\"filename\":\"/Users/experlabszeeshan/Music/bulbul-main/server/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/experlabszeeshan/Music/bulbul-main/server\",\"plugins\":[],\"presets\":[]}:7.12.3:production": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/experlabszeeshan/Music/bulbul-main/server/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/experlabszeeshan/Music/bulbul-main/server",
      "filename": "/Users/experlabszeeshan/Music/bulbul-main/server/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "production",
      "root": "/Users/experlabszeeshan/Music/bulbul-main/server",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/experlabszeeshan/Music/bulbul-main/server/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/experlabszeeshan/Music/bulbul-main/server/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/experlabszeeshan/Music/bulbul-main/server/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "import express from 'express';\nimport express_graphql from 'express-graphql';\nimport { buildSchema } from 'graphql'; // GraphQL schema\n\nconst schema = buildSchema(`\n    type Query {\n        message: String\n    }\n`); // Root resolver\n\nconst root = {\n  message: () => 'Hello World!'\n}; // Create an express server and a GraphQL endpoint\n\nconst app = express();\napp.use('/graphql', express_graphql({\n  schema: schema,\n  rootValue: root,\n  graphiql: true\n}));\napp.listen(4000, () => console.log('Express GraphQL Server Now Running On localhost:4000/graphql'));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJleHByZXNzX2dyYXBocWwiLCJidWlsZFNjaGVtYSIsInNjaGVtYSIsInJvb3QiLCJtZXNzYWdlIiwiYXBwIiwidXNlIiwicm9vdFZhbHVlIiwiZ3JhcGhpcWwiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiQUFBQSxPQUFPQSxPQUFQLE1BQW9CLFNBQXBCO0FBQ0EsT0FBT0MsZUFBUCxNQUE0QixpQkFBNUI7QUFDQSxTQUFTQyxXQUFULFFBQTRCLFNBQTVCLEMsQ0FDQTs7QUFDQSxNQUFNQyxNQUFNLEdBQUdELFdBQVcsQ0FBRTtBQUM1QjtBQUNBO0FBQ0E7QUFDQSxDQUowQixDQUExQixDLENBS0E7O0FBQ0EsTUFBTUUsSUFBSSxHQUFHO0FBQ1RDLEVBQUFBLE9BQU8sRUFBRSxNQUFNO0FBRE4sQ0FBYixDLENBSUE7O0FBRUEsTUFBTUMsR0FBRyxHQUFHTixPQUFPLEVBQW5CO0FBRUFNLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFVBQVIsRUFBb0JOLGVBQWUsQ0FBQztBQUNoQ0UsRUFBQUEsTUFBTSxFQUFFQSxNQUR3QjtBQUVoQ0ssRUFBQUEsU0FBUyxFQUFFSixJQUZxQjtBQUdoQ0ssRUFBQUEsUUFBUSxFQUFFO0FBSHNCLENBQUQsQ0FBbkM7QUFNQUgsR0FBRyxDQUFDSSxNQUFKLENBQVcsSUFBWCxFQUFpQixNQUFNQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSw4REFBWixDQUF2QiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvZXhwZXJsYWJzemVlc2hhbi9NdXNpYy9idWxidWwtbWFpbi9zZXJ2ZXIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgZXhwcmVzc19ncmFwaHFsIGZyb20gJ2V4cHJlc3MtZ3JhcGhxbCc7XG5pbXBvcnQgeyBidWlsZFNjaGVtYSB9IGZyb20gJ2dyYXBocWwnO1xuLy8gR3JhcGhRTCBzY2hlbWFcbmNvbnN0IHNjaGVtYSA9IGJ1aWxkU2NoZW1hKGBcbiAgICB0eXBlIFF1ZXJ5IHtcbiAgICAgICAgbWVzc2FnZTogU3RyaW5nXG4gICAgfVxuYCk7XG4vLyBSb290IHJlc29sdmVyXG5jb25zdCByb290ID0ge1xuICAgIG1lc3NhZ2U6ICgpID0+ICdIZWxsbyBXb3JsZCEnXG59O1xuXG4vLyBDcmVhdGUgYW4gZXhwcmVzcyBzZXJ2ZXIgYW5kIGEgR3JhcGhRTCBlbmRwb2ludFxuXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbmFwcC51c2UoJy9ncmFwaHFsJywgZXhwcmVzc19ncmFwaHFsKHtcbiAgICBzY2hlbWE6IHNjaGVtYSxcbiAgICByb290VmFsdWU6IHJvb3QsXG4gICAgZ3JhcGhpcWw6IHRydWVcbn0pKTtcblxuYXBwLmxpc3Rlbig0MDAwLCAoKSA9PiBjb25zb2xlLmxvZygnRXhwcmVzcyBHcmFwaFFMIFNlcnZlciBOb3cgUnVubmluZyBPbiBsb2NhbGhvc3Q6NDAwMC9ncmFwaHFsJykpOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "express_graphql",
        "buildSchema",
        "schema",
        "root",
        "message",
        "app",
        "use",
        "rootValue",
        "graphiql",
        "listen",
        "console",
        "log"
      ],
      "mappings": "AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,eAAP,MAA4B,iBAA5B;AACA,SAASC,WAAT,QAA4B,SAA5B,C,CACA;;AACA,MAAMC,MAAM,GAAGD,WAAW,CAAE;AAC5B;AACA;AACA;AACA,CAJ0B,CAA1B,C,CAKA;;AACA,MAAME,IAAI,GAAG;AACTC,EAAAA,OAAO,EAAE,MAAM;AADN,CAAb,C,CAIA;;AAEA,MAAMC,GAAG,GAAGN,OAAO,EAAnB;AAEAM,GAAG,CAACC,GAAJ,CAAQ,UAAR,EAAoBN,eAAe,CAAC;AAChCE,EAAAA,MAAM,EAAEA,MADwB;AAEhCK,EAAAA,SAAS,EAAEJ,IAFqB;AAGhCK,EAAAA,QAAQ,EAAE;AAHsB,CAAD,CAAnC;AAMAH,GAAG,CAACI,MAAJ,CAAW,IAAX,EAAiB,MAAMC,OAAO,CAACC,GAAR,CAAY,8DAAZ,CAAvB",
      "sourceRoot": "/Users/experlabszeeshan/Music/bulbul-main/server/",
      "sourcesContent": [
        "import express from 'express';\nimport express_graphql from 'express-graphql';\nimport { buildSchema } from 'graphql';\n// GraphQL schema\nconst schema = buildSchema(`\n    type Query {\n        message: String\n    }\n`);\n// Root resolver\nconst root = {\n    message: () => 'Hello World!'\n};\n\n// Create an express server and a GraphQL endpoint\n\nconst app = express();\n\napp.use('/graphql', express_graphql({\n    schema: schema,\n    rootValue: root,\n    graphiql: true\n}));\n\napp.listen(4000, () => console.log('Express GraphQL Server Now Running On localhost:4000/graphql'));"
      ]
    },
    "sourceType": "module",
    "mtime": 1605361310968
  }
}